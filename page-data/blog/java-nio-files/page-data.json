{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/java-nio-files/","result":{"data":{"site":{"siteMetadata":{"author":{"name":"Johnathan Gilday"},"blogTitle":"/ gilday / blog"}},"markdownRemark":{"id":"75b93821-ab8d-5c28-8749-cc812a76afce","excerpt":"If you’re like me, you associate the java.nio package introduced in Java 1.7\nwith nonblocking IO. For years, I ignored the java.nio.file sub-package,\nbecause I…","html":"<p>If you’re like me, you associate the <code>java.nio</code> package introduced in Java 1.7\nwith nonblocking IO. For years, I ignored the <code>java.nio.file</code> sub-package,\nbecause I was not working with the nonblocking IO types in <code>java.nio</code>. I wrongly\nassumed that meant I did not need to consider the types in <code>java.nio.file</code>. What\nI eventually came to learn is the “n” in <code>java.nio</code> <strong>does not</strong> stand for\n<em>nonblocking</em>; rather, it stands for <em>new</em> (according to\n<a href=\"https://jcp.org/en/jsr/detail?id=51\">JSR 51</a>).</p>\n<p>Referring to <code>java.nio.file</code>, JSR 51 says it introduces “an improved file system\ninterface”. More than a decade after the release of this improved file system\ninterface, I find that Java developers still feel more comfortable writing code\nthat uses <code>java.io.File</code> instead. In this article, we’ll explore some reasons\nwhy it’s time to consider using <code>java.nio.file</code> instead of <code>java.io.File</code> in\nyour next Java project.</p>\n<h2>Error Handling</h2>\n<p>Consider the following <code>java.io.File</code> code for creating a directory:</p>\n<pre class=\"grvsc-container solarized-light grvsc-mm-t6zo1R\" data-language=\"java\" data-index=\"0\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">var</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">dir</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">=</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">new</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">File</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(</span><span class=\"grvsc-tiaGIi-11 grvsc-t6zo1R-12\">&quot;my-new-directory&quot;</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">if</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> (</span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">!</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">file</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">mkdir</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">()) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-3 grvsc-tiaGIi-i grvsc-t6zo1R-3 grvsc-t6zo1R-i\">// failed to make directory, handle error</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">}</span></span></span></code></pre>\n<p>Note the error case. The <code>mkdir</code> method returns a boolean that indicates whether\nthe directory was created. It’s too easy for developers to forget to check the\nboolean returned by <code>mkdir</code> and handle this case.</p>\n<p>Even when developers do remember to check the returned boolean, all they know is\nthat the directory wasn’t created. They can’t know if this is an error they\nshould ignore or not. Was the directory not created, because the directory\nalready exists or because someone ripped the hard drive out? We can’t tell.</p>\n<p>Rather than returning a boolean, throwing an exception is an idiomatic way to do\nerror handling in Java. The <code>java.nio.file</code> APIs throw exceptions to communicate\nerrors. Consider the same code using <code>java.nio.file</code>:</p>\n<pre class=\"grvsc-container solarized-light grvsc-mm-t6zo1R\" data-language=\"java\" data-index=\"1\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">var</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">dir</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">=</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">Paths</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">get</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(</span><span class=\"grvsc-tiaGIi-11 grvsc-t6zo1R-12\">&quot;my-new-directory&quot;</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">)</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">try</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">    </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">Files</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">createDirectory</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(dir);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">} </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">catch</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> (</span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">FileAlreadyExistsException</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> ignored) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">} </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">catch</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> (</span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">IOException</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> e) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-3 grvsc-tiaGIi-i grvsc-t6zo1R-3 grvsc-t6zo1R-i\">// something horrible has happened</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">}</span></span></span></code></pre>\n<p>Here, we can use different exception types to handle cases differently. There’s\nmore information communicated in these exceptions than simply a returned\n<code>false</code>.</p>\n<p>This example only considered the “creating a directory” use case, but this\npattern may be found throughout the APIs for working with the file system.\n“Better error handling” is an improvement that any Java program can benefit\nfrom.</p>\n<h2>File System Abstraction</h2>\n<p>The <code>java.nio.file</code> package introduces a <code>FileSystem</code> abstraction for modeling a\nfile system. Of course, most use cases will only ever use the default\n<code>FileSystem</code> (returned by <code>FileSystems.getDefault()</code>), but this is a powerful\nconcept that allows for more advanced use cases.</p>\n<p>My favorite use case for this abstraction is leveraging an in-memory file system\nlike <a href=\"https://github.com/google/jimfs\">google/jimfs</a>. This can be particularly\nuseful for speeding up automated tests that perform a lot of file system\noperations with small files, because the in-memory file system is so much faster\nthan a file system on disk.</p>\n<p>Consider this test set-up example that injects an in-memory file system into a\nclass <code>MyDocumentManager</code> that performs a lot of file system operations.</p>\n<pre class=\"grvsc-container solarized-light grvsc-mm-t6zo1R\" data-language=\"java\" data-index=\"2\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">class</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-4\">MyDocumentManagerTest</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">private</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">FileSystem</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">fs</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">private</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">MyDocumentManager</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">documents</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  @</span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">Before</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">void</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">before</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">    fs </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">=</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">Jimfs</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">newFileSystem</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">Configuration</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">unix</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">());</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">    </span><span class=\"grvsc-tiaGIi-3 grvsc-tiaGIi-i grvsc-t6zo1R-3 grvsc-t6zo1R-i\">// inject in-memory file system into MyDocumentManager for testing</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">    documents </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">=</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">new</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">MyDocumentManager</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(fs);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  @</span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">After</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">void</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">after</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">() {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">    </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">fs</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">close</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">();</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">}</span></span></span></code></pre>\n<p>Cloud storage is another good use case for this abstraction. Google Cloud’s\n<a href=\"https://cloud.google.com/java/docs/reference/google-cloud-nio/latest/com.google.cloud.storage.contrib.nio\">com.google.cloud.storage.contrib.nio</a>\npackage makes available a Google Cloud Storage backed <code>FileSystem</code>. With this\nimplementation, Java programs can access data in Google Cloud Storage with the\nsame APIs they use to access files on disk.</p>\n<pre class=\"grvsc-container solarized-light grvsc-mm-t6zo1R\" data-language=\"java\" data-index=\"3\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">Path</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">path</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">=</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">Paths</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">get</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">URI</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">create</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(</span><span class=\"grvsc-tiaGIi-11 grvsc-t6zo1R-12\">&quot;gs://bucket/lolcat.csv&quot;</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">));</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">List</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">&lt;</span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">String</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">&gt; </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">lines</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">=</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">Files</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">readAllLines</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(path, </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">StandardCharsets</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">UTF_8</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">);</span></span></span></code></pre>\n<p>To benefit most from this abstraction, developers must be mindful not to\ninadvertently couple their code to the default file system. This coupling\nhappens when users call APIs that reference the static global\n<code>FileSystems.getDefault()</code>. Typically, this happens inadvertently via other\nstatic accessors like <code>Path.of</code>:</p>\n<pre class=\"grvsc-container solarized-light grvsc-mm-t6zo1R\" data-language=\"java\" data-index=\"4\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">class</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-4\">MyDocumentManager</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">private</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">String</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">root</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">public</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">void</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">save</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(</span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">String</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> name, </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">InputStream</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> is) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">    </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">var</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">path</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">=</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">Path</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">of</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(root, name); </span><span class=\"grvsc-tiaGIi-3 grvsc-tiaGIi-i grvsc-t6zo1R-3 grvsc-t6zo1R-i\">// ⚠️ Inadvertently couples to default file system</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">    </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">Files</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">copy</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(is, path);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">}</span></span></span></code></pre>\n<p>Instead, developers should apply good inversion of control practices when\nworking with the file system. That is, prefer to inject a root <code>Path</code> or\n<code>FileSystem</code> instead of obtaining a reference from a static accessor:</p>\n<pre class=\"grvsc-container solarized-light grvsc-mm-t6zo1R\" data-language=\"java\" data-index=\"5\"><code class=\"grvsc-code\"><span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">class</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-4\">MyDocumentManager</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">private</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">Path</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">root</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">;</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">public</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">void</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">save</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(</span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">String</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> name, </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">InputStream</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> is) {</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">    </span><span class=\"grvsc-tiaGIi-13 grvsc-tiaGIi-b grvsc-t6zo1R-1 grvsc-t6zo1R-b\">var</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">path</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-8 grvsc-t6zo1R-9\">=</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\"> </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">root</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">resolve</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(name); </span><span class=\"grvsc-tiaGIi-3 grvsc-tiaGIi-i grvsc-t6zo1R-3 grvsc-t6zo1R-i\">// ✅ resolves relative to injected Path root</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">    </span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">Files</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">.</span><span class=\"grvsc-tiaGIi-7 grvsc-t6zo1R-7\">copy</span><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">(is, path);</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">  }</span></span></span>\n<span class=\"grvsc-line\"><span class=\"grvsc-source\"><span class=\"grvsc-tiaGIi-1 grvsc-t6zo1R-1\">}</span></span></span></code></pre>\n<p>In the second example, the <code>MyDocumentManager</code> type is not coupled to any\nparticular <code>FileSystem</code>; rather, it uses whatever <code>FileSystem</code> the injected\n<code>Path</code> root belongs to.</p>\n<h2>Misc</h2>\n<p>There are a handful of other benefits to the <code>java.nio.file</code> APIs that I’ll\nsuccinctly list here:</p>\n<ul>\n<li>Processing directory listings as a <code>Stream</code></li>\n<li>Convenience methods for reading files e.g. <code>Files.lines(Path)</code>,\n<code>newInputStream(Path)</code>, and <code>newBufferedReader(Path)</code>.</li>\n<li>Watching directories and files for changes.</li>\n<li>Matching file paths to a pattern (e.g. globbing).</li>\n</ul>\n<p>One day, I’ll find the time to expand these bullets into proper headings of\ntheir own.</p>\n<h2>Conclusion</h2>\n<p>The <code>java.nio.file</code> APIs are not new, but they are to many developers accustomed\nto using <code>java.io.File</code>. In this article, we explored a handful of reasons why\ndevelopers should prefer to use <code>java.nio.file</code> instead of <code>java.io.File</code> for\nfile system access on their next Java project.</p>\n<style class=\"grvsc-styles\">\n  .grvsc-container {\n    overflow: auto;\n    position: relative;\n    -webkit-overflow-scrolling: touch;\n    padding-top: 1rem;\n    padding-top: var(--grvsc-padding-top, var(--grvsc-padding-v, 1rem));\n    padding-bottom: 1rem;\n    padding-bottom: var(--grvsc-padding-bottom, var(--grvsc-padding-v, 1rem));\n    border-radius: 8px;\n    border-radius: var(--grvsc-border-radius, 8px);\n    font-feature-settings: normal;\n    line-height: 1.4;\n  }\n  \n  .grvsc-code {\n    display: table;\n  }\n  \n  .grvsc-line {\n    display: table-row;\n    box-sizing: border-box;\n    width: 100%;\n    position: relative;\n  }\n  \n  .grvsc-line > * {\n    position: relative;\n  }\n  \n  .grvsc-gutter-pad {\n    display: table-cell;\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  .grvsc-gutter {\n    display: table-cell;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter::before {\n    content: attr(data-content);\n  }\n  \n  .grvsc-source {\n    display: table-cell;\n    padding-left: 1.5rem;\n    padding-left: var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem));\n    padding-right: 1.5rem;\n    padding-right: var(--grvsc-padding-right, var(--grvsc-padding-h, 1.5rem));\n  }\n  \n  .grvsc-source:empty::after {\n    content: ' ';\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    user-select: none;\n  }\n  \n  .grvsc-gutter + .grvsc-source {\n    padding-left: 0.75rem;\n    padding-left: calc(var(--grvsc-padding-left, var(--grvsc-padding-h, 1.5rem)) / 2);\n  }\n  \n  /* Line transformer styles */\n  \n  .grvsc-has-line-highlighting > .grvsc-code > .grvsc-line::before {\n    content: ' ';\n    position: absolute;\n    width: 100%;\n  }\n  \n  .grvsc-line-diff-add::before {\n    background-color: var(--grvsc-line-diff-add-background-color, rgba(0, 255, 60, 0.2));\n  }\n  \n  .grvsc-line-diff-del::before {\n    background-color: var(--grvsc-line-diff-del-background-color, rgba(255, 0, 20, 0.2));\n  }\n  \n  .grvsc-line-number {\n    padding: 0 2px;\n    text-align: right;\n    opacity: 0.7;\n  }\n  \n  .solarized-light { background-color: #FDF6E3; }\n  .solarized-light .grvsc-tiaGIi-i { font-style: italic; }\n  .solarized-light .grvsc-tiaGIi-b { font-weight: bold; }\n  .solarized-light .grvsc-tiaGIi-13 { color: #073642; }\n  .solarized-light .grvsc-tiaGIi-1 { color: #657B83; }\n  .solarized-light .grvsc-tiaGIi-7 { color: #268BD2; }\n  .solarized-light .grvsc-tiaGIi-8 { color: #859900; }\n  .solarized-light .grvsc-tiaGIi-11 { color: #2AA198; }\n  .solarized-light .grvsc-tiaGIi-3 { color: #93A1A1; }\n  .solarized-light .grvsc-line-highlighted::before {\n    background-color: var(--grvsc-line-highlighted-background-color, rgba(0, 0, 0, 0.05));\n    box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(0, 0, 0, 0.2));\n  }\n  \n  /* Solarized Dark */\n  @media (prefers-color-scheme: dark) {\n    .grvsc-mm-t6zo1R { background-color: #002B36; }\n    .grvsc-mm-t6zo1R .grvsc-t6zo1R-i { font-style: italic; }\n    .grvsc-mm-t6zo1R .grvsc-t6zo1R-b { font-weight: bold; }\n    .grvsc-mm-t6zo1R .grvsc-t6zo1R-1 { color: #93A1A1; }\n    .grvsc-mm-t6zo1R .grvsc-t6zo1R-7 { color: #268BD2; }\n    .grvsc-mm-t6zo1R .grvsc-t6zo1R-9 { color: #859900; }\n    .grvsc-mm-t6zo1R .grvsc-t6zo1R-12 { color: #2AA198; }\n    .grvsc-mm-t6zo1R .grvsc-t6zo1R-3 { color: #657B83; }\n    .grvsc-mm-t6zo1R .grvsc-t6zo1R-4 { color: #CB4B16; }\n    .grvsc-mm-t6zo1R .grvsc-line-highlighted::before {\n      background-color: var(--grvsc-line-highlighted-background-color, rgba(255, 255, 255, 0.1));\n      box-shadow: inset var(--grvsc-line-highlighted-border-width, 4px) 0 0 0 var(--grvsc-line-highlighted-border-color, rgba(255, 255, 255, 0.5));\n    }\n  }\n</style>","frontmatter":{"title":"☕️ Reasons to Prefer Java's New I/O for Working With Files","date":"January 16, 2023","description":"When Java introduced the java.nio.file package for working with files (in version 1.7), Java did not deprecate the existing java.io.File type. Is there a reason to prefer one of these seemingly duplicative strategies for working with files? I argue there is.\n"}}},"pageContext":{"slug":"/blog/java-nio-files/","previous":{"fields":{"slug":"/blog/stream-stax/","sourceName":"blog"},"frontmatter":{"title":"☕️ Connecting Java's Streaming API for XML (StAX) with Streams"}},"next":{"fields":{"slug":"/blog/fight-the-spammers/","sourceName":"blog"},"frontmatter":{"title":"📧 Fight the Spammers"}}}},"staticQueryHashes":["2841359383","614056702"],"slicesMap":{}}